{"version":3,"sources":["components/ShoppingCart/CartButton.jsx","components/Home/SearchBarProducts.jsx","components/Home/Product.jsx","components/Home/AllProducts.jsx","components/Categories/CategoryRadioButton.jsx","components/Categories/CategoryList.jsx","services/api.js","pages/Home.jsx","components/ShoppingCart/QuantityButton.jsx","components/ShoppingCart/Buttons.jsx","components/ShoppingCart/CartProduct.jsx","components/Home/HomeButton.jsx","components/ShoppingCart/EmpetyCart.jsx","pages/ShoppingCartPage.jsx","components/Form/Form.jsx","pages/ProductDetails.jsx","pages/CardCheckout.jsx","pages/PaymentRadioButton.jsx","pages/PaymentMethods.jsx","components/Form/FormCheckout.jsx","pages/Checkout.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["CartButton","to","data-testid","src","alt","className","Component","SearchBarProducts","this","props","handleChange","handleClick","name","type","onChange","onClick","React","Product","title","thumbnail","price","id","productId","addToCart","toFixed","AllProducts","searchProducts","map","product","key","category_id","CategoryRadioButton","category","onChangeFilterCategory","htmlFor","value","CategoryList","categories","index","getCategories","a","fetch","json","response","getProductsFromCategoryAndQuery","categoryId","query","URL","products","Home","state","bind","fetchProducts","fetchCategories","target","setState","Api","then","prod","results","stateProduct","JSON","parse","localStorage","getItem","quantity","some","currentIndex","indexOf","push","setItem","stringify","result","request","QuantityButton","text","testId","changeQuant","disabled","Buttons","decreaseQuantity","increaseQuantity","changeQuantityText","productvalue","CartProduct","HomeButton","EmpetyCart","ShoppingCartPage","localStorageProducts","length","Form","handleChangeForm","handleClickForm","checked","placeholder","ProductDetails","productList","fetchAPI","pid","match","params","p","filter","setProduct","e","attributes","console","log","att","value_name","CardCheckout","productsPrice","setProducts","cartStorage","sumTotal","total","reduce","acc","currentValue","PaymentRadioButton","PaymentMethods","paymentMethod","handleChangePayment","FormCheckout","cpf","email","telefone","cep","endereco","complemento","numero","cidade","estado","data","uf","sigla","nome","Checkout","Footer","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"+2CAaeA,E,uKARX,OACE,kBAAC,IAAD,CAAMC,GAAG,QAAQC,cAAY,wBAC3B,yBAAKC,IAAI,yDAAyDC,IAAI,WAAWC,UAAU,oB,GAJ1EC,aCwCVC,E,uKAtCH,IAAD,EAC+BC,KAAKC,MAAnCC,EADD,EACCA,aAAcC,EADf,EACeA,YACtB,OACE,4BAAQN,UAAU,UAChB,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,0BACb,2BACEA,UAAU,eACVO,KAAK,QACLC,KAAK,OACLX,cAAY,cACZY,SAAWJ,IAEb,4BACEG,KAAK,SACLX,cAAY,eACZa,QAAUJ,GAHZ,WAQF,kBAAC,EAAD,QAGJ,uBAAGT,cAAY,wBAAf,iE,GA1BwBc,IAAMV,WCkCvBW,E,uKAjCH,IAAD,EACuDT,KAAKC,MAA3DS,EADD,EACCA,MAAOC,EADR,EACQA,UAAWC,EADnB,EACmBA,MAAOC,EAD1B,EAC0BA,GAAIC,EAD9B,EAC8BA,UAAWC,EADzC,EACyCA,UAChD,OACE,yBAAKrB,cAAY,UAAUG,UAAU,WACnC,4BAAMa,GACN,kBAAC,IAAD,CACEhB,cAAY,sBACZD,GAAE,mBAAeoB,EAAf,YAAqBC,IAEvB,yBAAKnB,IAAMgB,EAAYf,IAAMc,KAE/B,wCAAWE,EAAMI,QAAQ,KACzB,4BACEtB,cAAY,sBACZW,KAAK,SACLE,QAAUQ,GAHZ,8B,GAbcP,IAAMV,WC2BbmB,E,uKA1BH,IAAD,EAC+BjB,KAAKC,MAAnCiB,EADD,EACCA,eAAgBH,EADjB,EACiBA,UACxB,OACE,0BAAMlB,UAAU,QACd,6BAASA,UAAU,qBAEfqB,EAAeC,KAAI,SAACC,GAAD,OAAc,kBAAC,EAAD,CAC/BC,IAAMD,EAAQP,GACdH,MAAQU,EAAQV,MAChBG,GAAKO,EAAQE,YACbR,UAAYM,EAAQP,GACpBD,MAAQQ,EAAQR,MAChBD,UAAYS,EAAQT,UACpBI,UAAY,kBAAMA,EAAUK,e,GAdhBtB,aCyBXyB,E,uKAzBH,IAAD,EACsCvB,KAAKC,MAA1CuB,EADD,EACCA,SAAUC,EADX,EACWA,uBACVrB,EAAaoB,EAAbpB,KAAMS,EAAOW,EAAPX,GACd,OACE,2BAAOa,QAAUb,GACf,2BACEP,SAAWmB,EACXE,MAAQd,EACRT,KAAK,WACLS,GAAKA,EACLR,KAAK,QACLX,cAAY,aAEZU,O,GAdwBN,aCuBnB8B,E,uKArBH,IAAD,EACwC5B,KAAKC,MAA5C4B,EADD,EACCA,WAAYJ,EADb,EACaA,uBACpB,OACE,yBAAK5B,UAAU,YACZgC,EACEV,KAAI,SAACK,EAAUM,GAAX,OACH,kBAAC,EAAD,CACET,IAAMS,EACNN,SAAWA,EACXC,uBAAyBA,Y,GAVZ3B,aCJpB,SAAeiC,IAAtB,+B,4CAAO,8BAAAC,EAAA,4DACO,oDADP,SAEoBC,MADb,qDADP,cAECJ,EAFD,gBAGkBA,EAAWK,OAH7B,cAGCC,EAHD,yBAIEA,GAJF,4C,sBAOA,SAAeC,EAAtB,oC,4CAAO,WAA+CC,EAAYC,GAA3D,mBAAAN,EAAA,6DACCO,EADD,iEACiEF,EADjE,cACiFC,GADjF,SAEkBL,MAAMM,GAFxB,cAECC,EAFD,gBAGkBA,EAASN,OAH3B,cAGCC,EAHD,yBAIEA,GAJF,4C,0BCuFQM,E,kDAvFb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXb,WAAY,GACZS,MAAO,GACPd,SAAU,GACVN,eAAgB,IAElB,EAAKhB,aAAe,EAAKA,aAAayC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKxC,YAAc,EAAKA,YAAYwC,KAAjB,gBAVP,E,gEAcZ3C,KAAK6C,oB,sCAGmB,IAAD,OAAVC,EAAU,EAAVA,OACLnB,EAAgBmB,EAAhBnB,MAAOvB,EAAS0C,EAAT1C,KACF,aAATA,EACFJ,KAAK+C,SAAL,eACG3C,EAAOuB,IACP,kBAAM,EAAKiB,mBAEd5C,KAAK+C,SAAL,eACG3C,EAAOuB,M,mKAMgB3B,KAAK0C,MAAzBJ,E,EAAAA,MAAOd,E,EAAAA,S,SACQwB,EAAoCxB,EAAUc,GAClEW,MAAK,SAACC,GAAD,OAAUA,EAAKC,W,OADjBX,E,OAENxC,KAAK+C,SAAS,CACZ7B,eAAgBsB,I,sIAIVY,GACR,IAAMZ,EAAWa,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GAEjE,GADAJ,EAAaK,SAAW,EACnBjB,EAASkB,MAAK,SAACtC,GAAD,OAAaA,EAAQP,KAAOuC,EAAavC,MAErD,CACL,IAAM8C,EAAenB,EAASrB,KAAI,SAACC,GAAD,OAAaA,EAAQP,MAAI+C,QAAQR,EAAavC,IAChF2B,EAASmB,GAAcF,UAAY,OAHnCjB,EAASqB,KAAKT,GAKhBG,aAAaO,QAAQ,WAAYT,KAAKU,UAAUvB,M,uKAIpBxC,KAAK0C,MAAzBlB,E,EAAAA,SAAUc,E,EAAAA,M,SACGU,EAAoCxB,EAAUc,G,OAA7D0B,E,OACAxB,EAAWwB,EAAOb,QACxBnD,KAAK+C,SAAS,CACZ7B,eAAgBsB,I,8QAKIQ,I,OAAhBiB,E,OACNjE,KAAK+C,SAAS,CACZlB,WAAYoC,I,qIAIN,IAAD,EACgCjE,KAAK0C,MAApCb,EADD,EACCA,WAAYX,EADb,EACaA,eACpB,OACE,oCACE,kBAAC,EAAD,CACEhB,aAAeF,KAAKE,aACpBC,YAAcH,KAAKG,cAErB,yBAAKN,UAAU,QACb,kBAAC,EAAD,CACEgC,WAAaA,EACbJ,uBAAyBzB,KAAKE,eAEhC,kBAAC,EAAD,CAAagB,eAAiBA,EAAiBH,UAAYf,KAAKe,kB,GAjFvDjB,aCsBJoE,E,uKAxBH,IAAD,EACyClE,KAAKC,MAA7CkE,EADD,EACCA,KAAMC,EADP,EACOA,OAAQC,EADf,EACeA,YAAaZ,EAD5B,EAC4BA,SACnC,OACE,6BACE,4BACEpD,KAAK,SACLE,QAAU8D,EACV3E,cAAc0E,EACdE,SAAWb,EAAW,GAEpBU,Q,GAXiB3D,IAAMV,WC0EpByE,E,kDAxEb,WAAYtE,GAAQ,IAAD,8BACjB,cAAMA,IAEDyC,MAAQ,CACXe,SAAU,GAEZ,EAAKe,iBAAmB,EAAKA,iBAAiB7B,KAAtB,gBACxB,EAAK8B,iBAAmB,EAAKA,iBAAiB9B,KAAtB,gBACxB,EAAK+B,mBAAqB,EAAKA,mBAAmB/B,KAAxB,gBART,E,gEAYjB3C,KAAK0E,uB,2CAGe,IACZtD,EAAYpB,KAAKC,MAAjBmB,QACRpB,KAAK+C,SAAS,CAAEU,SAAUrC,EAAQqC,a,yCAGhB,IAAD,OACjBzD,KAAK+C,UAAS,kBAAmB,CAC/BU,SADY,EAAGA,SACM,MACnB,WAAO,IACDrC,EAAY,EAAKnB,MAAjBmB,QACFoB,EAAWa,KAAKC,MAAMC,aAAaC,QAAQ,aAC3C1B,EAAQU,EAASrB,KAAI,SAACwD,GAAD,OAAkBA,EAAa9D,MAAI+C,QAAQxC,EAAQP,IAC9E2B,EAASV,GAAO2B,UAAY,EAC5BF,aAAaO,QAAQ,WAAYT,KAAKU,UAAUvB,S,yCAIhC,IAAD,OACjBxC,KAAK+C,UAAS,kBAAmB,CAC/BU,SADY,EAAGA,SACM,MACnB,WAAO,IACDrC,EAAY,EAAKnB,MAAjBmB,QACFoB,EAAWa,KAAKC,MAAMC,aAAaC,QAAQ,aAC3C1B,EAAQU,EAASrB,KAAI,SAACwD,GAAD,OAAkBA,EAAa9D,MAAI+C,QAAQxC,EAAQP,IAC9E2B,EAASV,GAAO2B,UAAY,EAC5BF,aAAaO,QAAQ,WAAYT,KAAKU,UAAUvB,S,+BAI1C,IACAiB,EAAazD,KAAK0C,MAAlBe,SACR,OACE,6BACE,kBAAC,EAAD,CACEU,KAAK,IACLE,YAAcrE,KAAKwE,iBACnBf,SAAWA,EACXW,OAAO,8BAET,uBAAG1E,cAAY,kCAAmC+D,GAClD,kBAAC,EAAD,CACEU,KAAK,IACLE,YAAcrE,KAAKyE,iBACnBL,OAAO,mC,GA3DK5D,IAAMV,WC4Bb8E,E,uKA3BH,IACApC,EAAaxC,KAAKC,MAAlBuC,SACR,OACE,6BACGA,EAASrB,KAAI,SAACC,EAASU,GAAV,OACZ,yBAAKT,IAAMS,GACT,uBACEpC,cAAY,8BAEX0B,EAAQV,OAEX,kBAAC,EAAD,CACEU,QAAUA,a,GAbEtB,aCSX+E,E,uKARX,OACE,kBAAC,IAAD,CAAMpF,GAAG,KACP,yBAAKE,IAAI,oDAAoDC,IAAI,SAASC,UAAU,oB,GAJnEC,aCOVgF,E,uKANX,OACE,uBAAGpF,cAAY,+BAAf,kC,GAHmBI,aCmBViF,E,uKAbX,IAAMC,EAAuB3B,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GAC7E,OACE,6BACE,kBAAC,EAAD,MACA,mDACCwB,EAAqBC,OAAS,EAC3B,kBAAC,EAAD,CAAazC,SAAWwC,IAA4B,kBAAC,EAAD,MACxD,kBAAC,IAAD,CAAMvF,GAAG,YAAYC,cAAY,qBAAjC,yB,GATuBc,IAAMV,WCgDtBoF,E,kDAnDb,WAAYjF,GAAQ,IAAD,8BACjB,cAAMA,IAEDkF,iBAAmB,EAAKA,iBAAiBxC,KAAtB,gBACxB,EAAKyC,gBAAkB,EAAKA,gBAAgBzC,KAArB,gBAJN,E,gEAOW,IAAXG,EAAU,EAAVA,OACT1C,EAAS0C,EAAT1C,KACFuB,EAAwB,aAAhBmB,EAAOzC,KAAsByC,EAAOuC,QAAUvC,EAAOnB,MACnE3B,KAAK+C,SAAL,eACG3C,EAAOuB,M,wCAKV3B,KAAK+C,SAAS,M,+BAKd,OACE,8BACE,8BAAUlD,UAAU,iBAClB,oDACA,6BACE,2BACEO,KAAK,QACLC,KAAK,QACLiF,YAAY,SACZhF,SAAWN,KAAKmF,mBAElB,0BAAMtF,UAAU,QAAhB,UACA,0BAAMA,UAAU,QAAhB,UACA,0BAAMA,UAAU,QAAhB,UACA,0BAAMA,UAAU,QAAhB,UACA,0BAAMA,UAAU,QAAhB,WAEF,8BACEH,cAAY,4BACZU,KAAK,WACLkF,YAAY,qBACZhF,SAAWN,KAAKmF,mBAElB,4BAAQ9E,KAAK,UAAb,iB,GA7CSG,IAAMV,WC2FVyF,E,kDArFb,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IAEDyC,MAAQ,CACX8C,YAAa,GACbpE,QAAS,IAEX,EAAKL,UAAY,EAAKA,UAAU4B,KAAf,gBAPA,E,gEAWjB3C,KAAKyF,a,mCAGO,IACeC,EAAY1F,KAAKC,MAApC0F,MAASC,OAAUF,IAErBG,EADkB7F,KAAK0C,MAArB8C,YACcM,QAAO,SAAC5C,GAAD,OAAUA,EAAKrC,KAAO6E,KAEnD1F,KAAK+C,SAAS,CACZ3B,QAASyE,EAAE,O,iKAKchF,EAAWb,KAAKC,MAAnC0F,MAASC,OAAU/E,G,SACNmC,EAAoCnC,EAAI,IAC1DoC,MAAK,SAACC,GAAD,OAAUA,EAAKC,W,OADjBa,E,OAENhE,KAAK+C,SAAS,CACZyC,YAAaxB,IACZ,kBAAM,EAAK+B,gB,sIAGNC,EAAG5C,GACX,IAAMZ,EAAWa,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GAEjE,GADAJ,EAAaK,SAAW,EACnBjB,EAASkB,MAAK,SAACtC,GAAD,OAAaA,EAAQP,KAAOuC,EAAavC,MAErD,CACL,IAAM8C,EAAenB,EAASrB,KAAI,SAACC,GAAD,OAAaA,EAAQP,MAAI+C,QAAQR,EAAavC,IAChF2B,EAASmB,GAAcF,UAAY,OAHnCjB,EAASqB,KAAKT,GAKhBG,aAAaO,QAAQ,WAAYT,KAAKU,UAAUvB,M,+BAGxC,IAAD,OACCpB,EAAYpB,KAAK0C,MAAjBtB,QACA6E,EAAe7E,EAAf6E,WAER,OADAC,QAAQC,IAAIF,GAEV,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,uBAAGvG,cAAY,uBAAuB0B,EAAQV,OAC9C,yBAAKf,IAAMyB,EAAQT,UAAYf,IAAMwB,EAAQV,QAC7C,6BAEIuF,GAAcA,EAAW9E,KAAI,SAACiF,GAAD,OAC3B,uBAAG/E,IAAM+E,EAAIhG,MAAb,UACMgG,EAAIhG,KADV,aACmBgG,EAAIC,iBAI7B,4BACE3G,cAAY,6BACZW,KAAK,SACLE,QAAU,SAACyF,GAAD,OAAO,EAAKjF,UAAUiF,EAAG5E,KAHrC,yBAOA,kBAAC,EAAD,W,GAvEqBZ,IAAMV,WC4CpBwG,E,kDAhDb,WAAYrG,GAAQ,IAAD,8BACjB,cAAMA,IACDyC,MAAQ,CACX6D,cAAe,EACf/D,SAAU,IAJK,E,gEASjBxC,KAAKwG,gB,oCAGQ,IAAD,OACNC,EAAcpD,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GACpExD,KAAK+C,SAAS,CAAEP,SAAUiE,IAAe,kBAAM,EAAKC,gB,iCAG1C,IAEJC,EADe3G,KAAK0C,MAAlBF,SACerB,KAAI,SAACC,GAAD,OAAcA,EAAQR,MAAQQ,EAAQqC,YAC9DmD,QAAO,SAACC,EAAKC,GAAN,OAAwBD,EAAMC,IAAe,GACvD9G,KAAK+C,SAAS,CAAEwD,cAAeI,M,+BAGvB,IAAD,EAC6B3G,KAAK0C,MAAjC6D,EADD,EACCA,cAAe/D,EADhB,EACgBA,SACvB,OACE,iCACGA,EAASrB,KAAI,SAACC,GAAD,OACZ,yBAAKC,IAAMD,EAAQP,IACjB,2BACIO,EAAQV,OAEZ,iCAEIU,EAAQR,WAIhB,oCAEI2F,EAAcvF,QAAQ,S,GA1CPlB,aCwBZiH,E,uKAtBH,IAAD,EACiC/G,KAAKC,MAArCI,EADD,EACCA,KAAMD,EADP,EACOA,KAAMuB,EADb,EACaA,MAAOrB,EADpB,EACoBA,SAC3B,OACE,2BAAOoB,QAAUtB,GACf,2BACEC,KAAOA,EACPD,KAAK,gBACLuB,MAAQA,EACRrB,SAAWA,S,GATYR,aC4ClBkH,E,kDA3Cb,WAAY/G,GAAQ,IAAD,8BACjB,cAAMA,IACDyC,MAAQ,CACXuE,cAAe,UAEjB,EAAKC,oBAAsB,EAAKA,oBAAoBvE,KAAzB,gBALV,E,mEAQc,IAAD,OACtBhB,EADsB,EAAVmB,OACZnB,MACR3B,KAAK+C,UAAS,iBAAO,CACnBkE,cAAetF,MACb,kBAAMuE,QAAQC,IAAI,EAAKzD,Y,+BAI3B,OACE,6BACE,kBAAC,EAAD,CACErC,KAAK,QACLsB,MAAM,SACNrB,SAAWN,KAAKkH,sBAElB,kBAAC,EAAD,CACE7G,KAAK,QACLsB,MAAM,OACNrB,SAAWN,KAAKkH,sBAElB,kBAAC,EAAD,CACE7G,KAAK,QACLsB,MAAM,aACNrB,SAAWN,KAAKkH,sBAElB,kBAAC,EAAD,CACE7G,KAAK,QACLsB,MAAM,MACNrB,SAAWN,KAAKkH,2B,GArCGpH,a,QC2HdqH,E,kDA1Hb,WAAYlH,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,aAAe,EAAKA,aAAayC,KAAlB,gBAEpB,EAAKD,MAAQ,CACXtC,KAAM,GACNgH,IAAK,GACLC,MAAO,GACPC,SAAU,GACVC,IAAK,GACLC,SAAU,GACVC,YAAa,GACbC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,IAfO,E,4DAmBO,IAAX9E,EAAU,EAAVA,OACL1C,EAAS0C,EAAT1C,KACFuB,EAAwB,aAAhBmB,EAAOzC,KAAsByC,EAAOuC,QAAUvC,EAAOnB,MACnE3B,KAAK+C,SAAL,eACG3C,EAAOuB,M,+BAIF,IAAD,EAMkD3B,KAAK0C,MAJ5DtC,EAFK,EAELA,KACAgH,EAHK,EAGLA,IACAC,EAJK,EAILA,MACAC,EALK,EAKLA,SACAC,EANK,EAMLA,IAAKC,EANA,EAMAA,SAAUC,EANV,EAMUA,YAAaC,EANvB,EAMuBA,OAAQC,EAN/B,EAM+BA,OAAQC,EANvC,EAMuCA,OAC9C,OACE,0BAAM/H,UAAU,iBACd,8DACA,2BACEH,cAAY,oBACZW,KAAK,OACLD,KAAK,OACLuB,MAAQvB,EACRkF,YAAY,gBACZhF,SAAWN,KAAKE,eAElB,2BACER,cAAY,eACZW,KAAK,OACLD,KAAK,MACLuB,MAAQyF,EACR9B,YAAY,MACZhF,SAAWN,KAAKE,eAElB,2BACER,cAAY,iBACZW,KAAK,OACLD,KAAK,QACLuB,MAAQ0F,EACR/B,YAAY,QACZhF,SAAWN,KAAKE,eAElB,2BACER,cAAY,iBACZW,KAAK,OACLD,KAAK,WACLuB,MAAQ2F,EACRhC,YAAY,WACZhF,SAAWN,KAAKE,eAElB,2BACER,cAAY,eACZW,KAAK,OACLD,KAAK,MACLuB,MAAQ4F,EACRjC,YAAY,MACZhF,SAAWN,KAAKE,eAElB,2BACER,cAAY,mBACZW,KAAK,OACLD,KAAK,WACLuB,MAAQ6F,EACRlC,YAAY,cACZhF,SAAWN,KAAKE,eAElB,2BACEG,KAAK,OACLD,KAAK,cACLuB,MAAQ8F,EACRnC,YAAY,cACZhF,SAAWN,KAAKE,eAElB,2BACEG,KAAK,OACLD,KAAK,SACLuB,MAAQ+F,EACRpC,YAAY,YACZhF,SAAWN,KAAKE,eAElB,2BACEG,KAAK,OACLD,KAAK,SACLuB,MAAQgG,EACRrC,YAAY,SACZhF,SAAWN,KAAKE,eAElB,4BACEG,KAAK,OACLD,KAAK,SACLuB,MAAQiG,EACRtC,YAAY,SACZhF,SAAWN,KAAKE,cAGd2H,IAAQ1G,KAAI,SAAC2G,GAAD,OAAQ,4BAAQzG,IAAMyG,EAAGC,OAASD,EAAGE,e,GAnHlCxH,IAAMV,WCiBlBmI,E,uKAZX,OACE,6BACE,kBAAC,EAAD,MACA,6CACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GARezH,IAAMV,WCadoI,E,uKAfX,OACE,4BAAQrI,UAAU,UAChB,kEACA,wBAAIA,UAAU,mBACZ,uCACA,wCACA,yCACA,qCACA,6C,GAVWW,IAAMV,WCyBZqI,E,uKAhBX,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAY7F,IAClC,kBAAC,IAAD,CAAO4F,KAAK,QAAQC,UAAYvD,IAChC,kBAAC,IAAD,CAAOsD,KAAK,oBAAoBC,UAAY/C,IAC5C,kBAAC,IAAD,CAAO8C,KAAK,YAAYC,UAAYL,MAGxC,kBAAC,EAAD,W,GAZUzH,IAAMV,WCGJyI,QACW,cAA7BC,OAAOC,SAASC,UAEkB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/C,MAC1B,2DCZNgD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjG,MAAK,SAACkG,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNpD,QAAQoD,MAAMA,EAAMC,c","file":"static/js/main.e3c18a6d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n// Comentario Apenas para commitar;\nclass CartButton extends Component {\n  render() {\n    return (\n      <Link to=\"/cart\" data-testid=\"shopping-cart-button\">\n        <img src=\"https://img.icons8.com/ios/50/000000/shopping-cart.png\" alt=\"carrinho\" className=\"cart-image\" />\n      </Link>\n    );\n  }\n}\n\nexport default CartButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CartButton from '../ShoppingCart/CartButton';\n\nclass SearchBarProducts extends React.Component {\n  render() {\n    const { handleChange, handleClick } = this.props;\n    return (\n      <header className=\"header\">\n        <div className=\"search-container\">\n          <div className=\"search\">\n            <div className=\"input-search-container\">\n              <input\n                className=\"input-search\"\n                name=\"query\"\n                type=\"text\"\n                data-testid=\"query-input\"\n                onChange={ handleChange }\n              />\n              <button\n                type=\"button\"\n                data-testid=\"query-button\"\n                onClick={ handleClick }\n              >\n                Buscar\n              </button>\n            </div>\n            <CartButton />\n          </div>\n        </div>\n        <p data-testid=\"home-initial-message\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n      </header>\n    );\n  }\n}\n\nSearchBarProducts.propTypes = {\n  handleChange: PropTypes.func,\n  handleClick: PropTypes.func,\n}.isRequired;\n\nexport default SearchBarProducts;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Product extends React.Component {\n  render() {\n    const { title, thumbnail, price, id, productId, addToCart } = this.props;\n    return (\n      <div data-testid=\"product\" className=\"product\">\n        <h4>{ title }</h4>\n        <Link\n          data-testid=\"product-detail-link\"\n          to={ `/product/${id}/${productId}` }\n        >\n          <img src={ thumbnail } alt={ title } />\n        </Link>\n        <p>{ `R$ ${price.toFixed(2)}` }</p>\n        <button\n          data-testid=\"product-add-to-cart\"\n          type=\"button\"\n          onClick={ addToCart }\n        >\n          Adicionar ao Carrinho\n        </button>\n      </div>\n    );\n  }\n}\n\nProduct.propTypes = {\n  title: PropTypes.string,\n  thumbnail: PropTypes.string,\n  price: PropTypes.number,\n  id: PropTypes.string,\n  productId: PropTypes.string,\n  addToCart: PropTypes.func,\n}.isRequired;\n\nexport default Product;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Product from './Product';\n\nclass AllProducts extends Component {\n  render() {\n    const { searchProducts, addToCart } = this.props;\n    return (\n      <main className=\"main\">\n        <section className=\"product-container\">\n          {\n            searchProducts.map((product) => (<Product\n              key={ product.id }\n              title={ product.title }\n              id={ product.category_id }\n              productId={ product.id }\n              price={ product.price }\n              thumbnail={ product.thumbnail }\n              addToCart={ () => addToCart(product) }\n            />))\n          }\n        </section>\n      </main>\n    );\n  }\n}\n\nAllProducts.propTypes = {\n  searchProducts: PropTypes.arrayOf(PropTypes.object),\n}.isRequired;\n\nexport default AllProducts;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass CategoryRadioButton extends Component {\n  render() {\n    const { category, onChangeFilterCategory } = this.props;\n    const { name, id } = category;\n    return (\n      <label htmlFor={ id }>\n        <input\n          onChange={ onChangeFilterCategory }\n          value={ id }\n          name=\"category\"\n          id={ id }\n          type=\"radio\"\n          data-testid=\"category\"\n        />\n        { name }\n      </label>\n    );\n  }\n}\n\nCategoryRadioButton.propTypes = {\n  category: propTypes.objectOf(propTypes.string),\n  name: propTypes.string,\n  id: propTypes.string,\n}.isRequired;\n\nexport default CategoryRadioButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CategoryRadioButton from './CategoryRadioButton';\n\nclass CategoryList extends Component {\n  render() {\n    const { categories, onChangeFilterCategory } = this.props;\n    return (\n      <div className=\"category\">\n        {categories\n          .map((category, index) => (\n            <CategoryRadioButton\n              key={ index }\n              category={ category }\n              onChangeFilterCategory={ onChangeFilterCategory }\n            />))}\n      </div>\n    );\n  }\n}\n\nCategoryList.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.object),\n  onChangeFilterCategory: PropTypes.func,\n}.isRequired;\n\nexport default CategoryList;\n","export async function getCategories() {\n  const URL = 'https://api.mercadolibre.com/sites/MLB/categories';\n  const categories = await fetch(URL);\n  const response = await categories.json();\n  return response;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const URL = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n  const products = await fetch(URL);\n  const response = await products.json();\n  return response;\n}\n","import React, { Component } from 'react';\nimport SearchBarProducts from '../components/Home/SearchBarProducts';\nimport AllProducts from '../components/Home/AllProducts';\nimport CategoryList from '../components/Categories/CategoryList';\nimport * as Api from '../services/api';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n      query: '',\n      category: '',\n      searchProducts: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.fetchProducts = this.fetchProducts.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchCategories();\n  }\n\n  handleChange({ target }) {\n    const { value, name } = target;\n    if (name === 'category') {\n      this.setState({\n        [name]: value,\n      }, () => this.fetchProducts());\n    } else {\n      this.setState({\n        [name]: value,\n      });\n    }\n  }\n\n  async handleClick() {\n    const { query, category } = this.state;\n    const products = await Api.getProductsFromCategoryAndQuery(category, query)\n      .then((prod) => prod.results);\n    this.setState({\n      searchProducts: products,\n    });\n  }\n\n  addToCart(stateProduct) {\n    const products = JSON.parse(localStorage.getItem('products')) || [];\n    stateProduct.quantity = 1;\n    if (!products.some((product) => product.id === stateProduct.id)) {\n      products.push(stateProduct);\n    } else {\n      const currentIndex = products.map((product) => product.id).indexOf(stateProduct.id);\n      products[currentIndex].quantity += 1;\n    }\n    localStorage.setItem('products', JSON.stringify(products));\n  }\n\n  async fetchProducts() {\n    const { category, query } = this.state;\n    const result = await Api.getProductsFromCategoryAndQuery(category, query);\n    const products = result.results;\n    this.setState({\n      searchProducts: products,\n    });\n  }\n\n  async fetchCategories() {\n    const request = await Api.getCategories();\n    this.setState({\n      categories: request,\n    });\n  }\n\n  render() {\n    const { categories, searchProducts } = this.state;\n    return (\n      <>\n        <SearchBarProducts\n          handleChange={ this.handleChange }\n          handleClick={ this.handleClick }\n        />\n        <div className=\"main\">\n          <CategoryList\n            categories={ categories }\n            onChangeFilterCategory={ this.handleChange }\n          />\n          <AllProducts searchProducts={ searchProducts } addToCart={ this.addToCart } />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass QuantityButton extends React.Component {\n  render() {\n    const { text, testId, changeQuant, quantity } = this.props;\n    return (\n      <div>\n        <button\n          type=\"button\"\n          onClick={ changeQuant }\n          data-testid={ testId }\n          disabled={ quantity < 2 }\n        >\n          { text }\n        </button>\n      </div>\n    );\n  }\n}\n\nQuantityButton.propTypes = {\n  text: PropTypes.string,\n  handleQuantity: PropTypes.func,\n  testId: PropTypes.string,\n  quantity: PropTypes.number,\n}.isRequired;\n\nexport default QuantityButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport QuantityButton from './QuantityButton';\n\nclass Buttons extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quantity: 0,\n    };\n    this.decreaseQuantity = this.decreaseQuantity.bind(this);\n    this.increaseQuantity = this.increaseQuantity.bind(this);\n    this.changeQuantityText = this.changeQuantityText.bind(this);\n  }\n\n  componentDidMount() {\n    this.changeQuantityText();\n  }\n\n  changeQuantityText() {\n    const { product } = this.props;\n    this.setState({ quantity: product.quantity });\n  }\n\n  increaseQuantity() {\n    this.setState(({ quantity }) => ({\n      quantity: quantity + 1,\n    }), () => {\n      const { product } = this.props;\n      const products = JSON.parse(localStorage.getItem('products'));\n      const index = products.map((productvalue) => productvalue.id).indexOf(product.id);\n      products[index].quantity += 1;\n      localStorage.setItem('products', JSON.stringify(products));\n    });\n  }\n\n  decreaseQuantity() {\n    this.setState(({ quantity }) => ({\n      quantity: quantity - 1,\n    }), () => {\n      const { product } = this.props;\n      const products = JSON.parse(localStorage.getItem('products'));\n      const index = products.map((productvalue) => productvalue.id).indexOf(product.id);\n      products[index].quantity -= 1;\n      localStorage.setItem('products', JSON.stringify(products));\n    });\n  }\n\n  render() {\n    const { quantity } = this.state;\n    return (\n      <div>\n        <QuantityButton\n          text=\"-\"\n          changeQuant={ this.decreaseQuantity }\n          quantity={ quantity }\n          testId=\"product-decrease-quantity\"\n        />\n        <p data-testid=\"shopping-cart-product-quantity\">{ quantity }</p>\n        <QuantityButton\n          text=\"+\"\n          changeQuant={ this.increaseQuantity }\n          testId=\"product-increase-quantity\"\n        />\n      </div>\n    );\n  }\n}\n\nButtons.propTypes = {\n  product: PropTypes.shape({\n    quantity: PropTypes.number,\n    id: PropTypes.string,\n  }),\n}.isRequired;\n\nexport default Buttons;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Buttons from './Buttons';\n\nclass CartProduct extends Component {\n  render() {\n    const { products } = this.props;\n    return (\n      <div>\n        {products.map((product, index) => (\n          <div key={ index }>\n            <p\n              data-testid=\"shopping-cart-product-name\"\n            >\n              {product.title}\n            </p>\n            <Buttons\n              product={ product }\n            />\n          </div>))}\n      </div>\n    );\n  }\n}\n\nCartProduct.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    quantity: PropTypes.number,\n  })),\n}.isRequired;\n\nexport default CartProduct;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass HomeButton extends Component {\n  render() {\n    return (\n      <Link to=\"/\">\n        <img src=\"https://img.icons8.com/ios/50/000000/back--v1.png\" alt=\"voltar\" className=\"back-image\" />\n      </Link>\n    );\n  }\n}\n\nexport default HomeButton;\n","import React, { Component } from 'react';\n\nclass EmpetyCart extends Component {\n  render() {\n    return (\n      <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>\n    );\n  }\n}\n\nexport default EmpetyCart;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CartProduct from '../components/ShoppingCart/CartProduct';\nimport HomeButton from '../components/Home/HomeButton';\nimport EmpetyCart from '../components/ShoppingCart/EmpetyCart';\n\nclass ShoppingCartPage extends React.Component {\n  render() {\n    const localStorageProducts = JSON.parse(localStorage.getItem('products')) || [];\n    return (\n      <div>\n        <HomeButton />\n        <h1>Carrinho de Compras</h1>\n        {localStorageProducts.length > 0\n          ? <CartProduct products={ localStorageProducts } /> : <EmpetyCart />}\n        <Link to=\"/checkout\" data-testid=\"checkout-products\">Finalizar Compra</Link>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingCartPage;\n","import React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeForm = this.handleChangeForm.bind(this);\n    this.handleClickForm = this.handleClickForm.bind(this);\n  }\n\n  handleChangeForm({ target }) {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleClickForm() {\n    this.setState({\n    });\n  }\n\n  render() {\n    return (\n      <form>\n        <fieldset className=\"fieldset-form\">\n          <legend>Avaliações</legend>\n          <div>\n            <input\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"E-mail\"\n              onChange={ this.handleChangeForm }\n            />\n            <span className=\"star\">★</span>\n            <span className=\"star\">★</span>\n            <span className=\"star\">★</span>\n            <span className=\"star\">★</span>\n            <span className=\"star\">★</span>\n          </div>\n          <textarea\n            data-testid=\"product-detail-evaluation\"\n            name=\"textarea\"\n            placeholder=\"Mensagem(Opcional)\"\n            onChange={ this.handleChangeForm }\n          />\n          <button type=\"button\">Avaliar</button>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Api from '../services/api';\nimport CartButton from '../components/ShoppingCart/CartButton';\nimport HomeButton from '../components/Home/HomeButton';\nimport Form from '../components/Form/Form';\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      productList: [],\n      product: [],\n    };\n    this.addToCart = this.addToCart.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchAPI();\n  }\n\n  setProduct() {\n    const { match: { params: { pid } } } = this.props;\n    const { productList } = this.state;\n    const p = productList.filter((prod) => prod.id === pid);\n\n    this.setState({\n      product: p[0],\n    });\n  }\n\n  async fetchAPI() {\n    const { match: { params: { id } } } = this.props;\n    const result = await Api.getProductsFromCategoryAndQuery(id, '')\n      .then((prod) => prod.results);\n    this.setState({\n      productList: result,\n    }, () => this.setProduct());\n  }\n\n  addToCart(e, stateProduct) {\n    const products = JSON.parse(localStorage.getItem('products')) || [];\n    stateProduct.quantity = 1;\n    if (!products.some((product) => product.id === stateProduct.id)) {\n      products.push(stateProduct);\n    } else {\n      const currentIndex = products.map((product) => product.id).indexOf(stateProduct.id);\n      products[currentIndex].quantity += 1;\n    }\n    localStorage.setItem('products', JSON.stringify(products));\n  }\n\n  render() {\n    const { product } = this.state;\n    const { attributes } = product;\n    console.log(attributes);\n    return (\n      <div>\n        <HomeButton />\n        <CartButton />\n        <p data-testid=\"product-detail-name\">{product.title}</p>\n        <img src={ product.thumbnail } alt={ product.title } />\n        <div>\n          {\n            attributes && attributes.map((att) => (\n              <p key={ att.name }>\n                {`${att.name}: ${att.value_name}`}\n              </p>))\n          }\n        </div>\n        <button\n          data-testid=\"product-detail-add-to-cart\"\n          type=\"button\"\n          onClick={ (e) => this.addToCart(e, product) }\n        >\n          Adicionar ao carrinho\n        </button>\n        <Form />\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      pid: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default ProductDetails;\n","import React, { Component } from 'react';\n\nclass CardCheckout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsPrice: 0,\n      products: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  setProducts() {\n    const cartStorage = JSON.parse(localStorage.getItem('products')) || [];\n    this.setState({ products: cartStorage }, () => this.sumTotal());\n  }\n\n  sumTotal() {\n    const { products } = this.state;\n    const total = products.map((product) => (product.price * product.quantity))\n      .reduce((acc, currentValue) => (acc + currentValue), 0);\n    this.setState({ productsPrice: total });\n  }\n\n  render() {\n    const { productsPrice, products } = this.state;\n    return (\n      <section>\n        {products.map((product) => (\n          <div key={ product.id }>\n            <p>\n              { product.title }\n            </p>\n            <p>\n              R$:\n              { product.price }\n            </p>\n          </div>\n        ))}\n        <p>\n          Total:\n          { productsPrice.toFixed(2) }\n        </p>\n      </section>\n    );\n  }\n}\n\nexport default CardCheckout;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass PaymentRadioButton extends Component {\n  render() {\n    const { type, name, value, onChange } = this.props;\n    return (\n      <label htmlFor={ name }>\n        <input\n          type={ type }\n          name=\"paymentMethod\"\n          value={ value }\n          onChange={ onChange }\n        />\n      </label>\n    );\n  }\n}\n\nPaymentRadioButton.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n}.isRequired;\n\nexport default PaymentRadioButton;\n","import React, { Component } from 'react';\nimport PaymentRadioButton from './PaymentRadioButton';\n\nclass PaymentMethods extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paymentMethod: 'boleto',\n    };\n    this.handleChangePayment = this.handleChangePayment.bind(this);\n  }\n\n  handleChangePayment({ target }) {\n    const { value } = target;\n    this.setState(() => ({\n      paymentMethod: value,\n    }), () => console.log(this.state));\n  }\n\n  render() {\n    return (\n      <div>\n        <PaymentRadioButton\n          type=\"radio\"\n          value=\"Boleto\"\n          onChange={ this.handleChangePayment }\n        />\n        <PaymentRadioButton\n          type=\"radio\"\n          value=\"Visa\"\n          onChange={ this.handleChangePayment }\n        />\n        <PaymentRadioButton\n          type=\"radio\"\n          value=\"MasterCard\"\n          onChange={ this.handleChangePayment }\n        />\n        <PaymentRadioButton\n          type=\"radio\"\n          value=\"Elo\"\n          onChange={ this.handleChangePayment }\n        />\n      </div>\n    );\n  }\n}\n\nexport default PaymentMethods;\n","import React from 'react';\nimport * as data from './estados.json';\n\nclass FormCheckout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      name: '',\n      cpf: '',\n      email: '',\n      telefone: '',\n      cep: '',\n      endereco: '',\n      complemento: '',\n      numero: '',\n      cidade: '',\n      estado: '',\n    };\n  }\n\n  handleChange({ target }) {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const {\n      name,\n      cpf,\n      email,\n      telefone,\n      cep, endereco, complemento, numero, cidade, estado } = this.state;\n    return (\n      <form className=\"form-checkout\">\n        <h3>Informações do Comprador</h3>\n        <input\n          data-testid=\"checkout-fullname\"\n          type=\"text\"\n          name=\"name\"\n          value={ name }\n          placeholder=\"Nome Completo\"\n          onChange={ this.handleChange }\n        />\n        <input\n          data-testid=\"checkout-cpf\"\n          type=\"text\"\n          name=\"cpf\"\n          value={ cpf }\n          placeholder=\"CPF\"\n          onChange={ this.handleChange }\n        />\n        <input\n          data-testid=\"checkout-email\"\n          type=\"text\"\n          name=\"email\"\n          value={ email }\n          placeholder=\"Email\"\n          onChange={ this.handleChange }\n        />\n        <input\n          data-testid=\"checkout-phone\"\n          type=\"text\"\n          name=\"telefone\"\n          value={ telefone }\n          placeholder=\"Telefone\"\n          onChange={ this.handleChange }\n        />\n        <input\n          data-testid=\"checkout-cep\"\n          type=\"text\"\n          name=\"cep\"\n          value={ cep }\n          placeholder=\"CEP\"\n          onChange={ this.handleChange }\n        />\n        <input\n          data-testid=\"checkout-address\"\n          type=\"text\"\n          name=\"endereco\"\n          value={ endereco }\n          placeholder=\"Endereço\"\n          onChange={ this.handleChange }\n        />\n        <input\n          type=\"text\"\n          name=\"complemento\"\n          value={ complemento }\n          placeholder=\"Complemento\"\n          onChange={ this.handleChange }\n        />\n        <input\n          type=\"text\"\n          name=\"numero\"\n          value={ numero }\n          placeholder=\"Número\"\n          onChange={ this.handleChange }\n        />\n        <input\n          type=\"text\"\n          name=\"cidade\"\n          value={ cidade }\n          placeholder=\"Cidade\"\n          onChange={ this.handleChange }\n        />\n        <select\n          type=\"text\"\n          name=\"estado\"\n          value={ estado }\n          placeholder=\"Estado\"\n          onChange={ this.handleChange }\n        >\n          {\n            data.UF.map((uf) => <option key={ uf.sigla }>{uf.nome}</option>)\n          }\n        </select>\n      </form>\n    );\n  }\n}\n\nexport default FormCheckout;\n","import React from 'react';\nimport HomeButton from '../components/Home/HomeButton';\nimport CardCheckout from './CardCheckout';\nimport PaymentMethods from './PaymentMethods';\nimport FormCheckout from '../components/Form/FormCheckout';\n\nclass Checkout extends React.Component {\n  render() {\n    return (\n      <div>\n        <HomeButton />\n        <p>Hello World!!!</p>\n        <CardCheckout />\n        <FormCheckout />\n        <PaymentMethods />\n      </div>\n    );\n  }\n}\n\nexport default Checkout;\n","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <h3>Projeto Desenvolvido pelo Grupo 12</h3>\n        <ul className=\"names-container\">\n          <li>Alysson</li>\n          <li>Emannuel</li>\n          <li>Guilherme</li>\n          <li>Kevin</li>\n          <li>Patrick</li>\n        </ul>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport ShoppingCartPage from './pages/ShoppingCartPage';\nimport ProductDetails from './pages/ProductDetails';\nimport Checkout from './pages/Checkout';\nimport Footer from './components/Footer/Footer';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={ Home } />\n            <Route path=\"/cart\" component={ ShoppingCartPage } />\n            <Route path=\"/product/:id/:pid\" component={ ProductDetails } />\n            <Route path=\"/checkout\" component={ Checkout } />\n          </Switch>\n        </BrowserRouter>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}